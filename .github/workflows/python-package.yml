name: Python package

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: ["3.10", "3.11", "3.12"]
        include:
          - os: ubuntu-latest
            path: ~/.cache/pip
          - os: macos-latest
            path: ~/Library/Caches/pip
          - os: windows-latest
            path: ~\AppData\Local\pip\Cache

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: conda-incubator/setup-miniconda@v3
        with:
          channels: conda-forge,defaults
          channel-priority: strict
          python-version: ${{ matrix.python-version }}

      - name: Install TensorFlow
        shell: bash -el {0}  # Important: activates the conda environment
        if: runner.os != 'macOS'
        run: |
          pip install tensorflow tensorpack==0.11 tf_slim==1.1.0 tf-keras

      - name: Install TensorFlow on macOS
        shell: bash -el {0}  # Important: activates the conda environment
        if: runner.os == 'macOS'
        run: |
          pip install tensorflow-macos tensorpack==0.11 tf_slim==1.1.0 tf-keras

      - name: Install dependencies
        shell: bash -el {0}  # Important: activates the conda environment
        run: |
          python -m pip install --upgrade pip setuptools wheel
          pip install -r requirements.txt
          # debug
          # python -c "from deeplabcut.pose_estimation_tensorflow import _tf_legacy; print('Imported _tf_legacy')"
          python -c "import deeplabcut.pose_estimation_tensorflow as dlc_tf; print('Imported dlc_tf')"


      - name: Install ffmpeg
        run: |
          if [ "$RUNNER_OS" == "Linux" ]; then
            sudo apt-get update
            sudo apt-get install ffmpeg
          elif [ "$RUNNER_OS" == "macOS" ]; then
            brew install ffmpeg || true
          else
            choco install ffmpeg
          fi
        shell: bash

      - name: Run pytest tests
        shell: bash -el {0}  # Important: activates the conda environment
        run: |
          pip install pytest
          python -m pytest

      - name: Run functional tests
        shell: bash -el {0}  # Important: activates the conda environment
        run: |
          pip install git+https://github.com/${{ github.repository }}.git@${{ github.sha }}
          python examples/testscript.py
          python examples/testscript_multianimal.py
          python examples/testscript_pytorch_single_animal.py
          python examples/testscript_pytorch_multi_animal.py
