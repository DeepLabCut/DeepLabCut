name: python package

on:
  push:
    branches:
      - main
    tags:
      - "v*" # Push events to matching v*, i.e. v1.0, v20.15.10
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  test:
    name: ${{ matrix.platform }} py${{ matrix.python-version }}
    runs-on: ${{ matrix.platform }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-13, windows-latest]
        python-version: ["3.10", "3.11"]
        include:
          - os: ubuntu-latest
            path: ~/.cache/pip
          - os: macos-13
            path: ~/Library/Caches/pip
          - os: windows-latest
            path: ~\AppData\Local\pip\Cache
        exclude:
          - os: macos-13
            python-version: 3.7
          - os: windows-latest
            python-version: 3.7

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install setuptools tox tox-gh-actions
          python -m pip install -r requirements.txt

      - name: Install ffmpeg
        run: |
          if [ "$RUNNER_OS" == "Linux" ]; then
            sudo apt-get update
            sudo apt-get install ffmpeg
          elif [ "$RUNNER_OS" == "macOS" ]; then
            brew install ffmpeg || true
          else
            choco install ffmpeg
          fi
        shell: bash
        
      - name: Run pytest tests
        run: |
          pip install pytest
          python -m pytest

      - name: Coverage
        uses: codecov/codecov-action@v2

      - name: Run functional tests
        run: |
          pip install git+https://github.com/${{ github.repository }}.git@${{ github.sha }}
          python examples/testscript.py
          python examples/testscript_multianimal.py
    

  deploy:
# this will run when you have tagged a commit, starting with "v*"
# and requires that you have put your twine API key in your
# github secrets (see readme for details)
    needs: [test]
    runs-on: ubuntu-latest
    if: contains(github.ref, 'tags')
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.12"
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -U setuptools setuptools_scm wheel twine build
      - name: Build and publish
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.TWINE_API_KEY }}
        run: |
          git tag
          python -m build .
          twine upload dist/*
